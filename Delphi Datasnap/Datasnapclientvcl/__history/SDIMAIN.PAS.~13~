unit SDIMAIN;

interface

uses Winapi.Windows, System.Classes, Vcl.Graphics, Vcl.Forms, Vcl.Controls,
  Vcl.Menus, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls, Vcl.ComCtrls,
  Vcl.ImgList, Vcl.StdActns, Vcl.ActnList, Vcl.ToolWin, Data.DBXDataSnap,
  Data.DBXCommon, Data.DbxHTTPLayer, Data.DB, Datasnap.DBClient,
  Datasnap.DSConnect, Data.SqlExpr,SysUtils, Vcl.Grids, Vcl.DBGrids;

type
  TSDIAppForm = class(TForm)
    Conn: TSQLConnection;
    ClientDataSet1: TClientDataSet;
    DataSource1: TDataSource;
    Panel1: TPanel;
    Label3: TLabel;
    Label2: TLabel;
    Label1: TLabel;
    Label4: TLabel;
    rbHttp: TRadioButton;
    txtHostName: TEdit;
    rbTCP: TRadioButton;
    EditTcpPort: TEdit;
    EdithttpPort: TEdit;
    Button1: TButton;
    DBGrid1: TDBGrid;
    MethodAdmin: TDSProviderConnection;
    Button2: TButton;
    procedure FileNew1Execute(Sender: TObject);
    procedure FileExit1Execute(Sender: TObject);
    procedure HelpAbout1Execute(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  SDIAppForm: TSDIAppForm;

implementation

uses About, ServerClass;

{$R *.dfm}

procedure TSDIAppForm.FileNew1Execute(Sender: TObject);
begin
  { Do nothing }
end;

procedure TSDIAppForm.Button1Click(Sender: TObject);
var
  Port_TCP, Port_HTTP:string;
//  pParams: TStrings;
  begin
  //  pParams:= TStrings.Create;
  Conn.Params.Clear;
    Conn.Params.Add('HostName='+txtHostName.Text);


     Port_HTTP := EdithttpPort.text;
   Port_TCP := EditTcpPort.text;
  if rbHttp.Checked then
  begin
      Conn.Params.Add('CommunicationProtocol=http');
          Conn.Params.Add('Port=' + (Port_HTTP));
  end
  else  if rbTCP.Checked then
  Begin
   Conn.Params.Add('CommunicationProtocol=tcp/ip');
          Conn.Params.Add('Port=' + (Port_TCP));
  End;
    // pParams.Add('URLPath=' + pPath);


    Try
    Conn.Open;
    IF Conn.Connected Then
    Begin
         ShowMessage('Connected');
    End;
  Except
    On E: Exception Do
      ShowMessage( E.Message);
  End;
   //  MethodAdmin2 := TMethodAdminClient.Create(Conn2.DBXConnection);
  //TMethodAdmin

end;

procedure TSDIAppForm.Button2Click(Sender: TObject);
begin
   ClientDataSet1.Active := True;
end;

procedure TSDIAppForm.FileExit1Execute(Sender: TObject);
begin
  Close;
end;

procedure TSDIAppForm.HelpAbout1Execute(Sender: TObject);
begin
  AboutBox.ShowModal;
end;

end.
